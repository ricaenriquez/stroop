library(ggplot2)
library(dplyr)
data(diamonds)
summary(diamonds)
clarity_groups <- group_by(diamonds, clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price)*1.,
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
```
View(clarity_groups)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
View(diamondsByClarity)
?geom_histogram
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram()
p1
?gridExtra
??gridExtra
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram()
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2 <- ggplot(data=diamonds_mp_by_clarity, aes(x=cut)) + geom_histogram()
library(gridExtra)
grid.arrange(p1,p2, ncol=1)
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram()
library(gridExtra)
grid.arrange(p1,p2, ncol=1)
?geom_histogram
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(weight=price)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(weight=diamonds$price)
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram(weight=diamonds$price)
grid.arrange(p1,p2, ncol=1)
p1
p2
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(aes(weight=price))
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram(aes(weight=price))
grid.arrange(p1,p2, ncol=1)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(aes(weight=mean_price))
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram(aes(weight=mean_price))
grid.arrange(p1,p2, ncol=1)
p2 <- qplot(color, data=diamonds_mp_by_color, geom ="bar", weight=mean_price)
grid.arrange(p1,p2, ncol=1)
?diamonds
diamonds_by_cut <- group_by(diamonds, cut)
diamonds_mp_by_cut <- summarise(diamonds_by_cut, mean_price = mean(price))
p3 <- qplot(cut, data=diamonds_mp_by_cut, geom ="bar", weight=mean_price)
grid.arrange(p1,p2,p3 ncol=1)
grid.arrange(p1,p2,p3, ncol=1)
bye()
exit
quit
install.packages(c("car", "class", "curl", "dplyr", "evaluate", "foreign", "hexbin", "knitr", "lme4", "mapproj", "maps", "MASS", "mime", "nlme", "nnet", "psych", "quantreg", "R6", "rmarkdown", "scales", "SparseM", "spatial"))
setwd("~/RProjects/perceptual phenomenon")
